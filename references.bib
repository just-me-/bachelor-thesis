% Basic document
@book{sa,
    title={Dafny Language Server Redesign},
    author={Hess, Marcel and Kistler, Thomas},
    publisher={HSR Hochschule für Technik Rapperswil},
    year={2019/20}
}


@book{dev,
    title={Developer Documentation},
    author={Hess, Marcel and Kistler, Thomas},
    publisher={HSR Hochschule für Technik Rapperswil},
    year={2020}
}
@book{ba,
    title={Visual Studio Code Integration for the Dafny Language and Program Verifier},
    author={Krucker, Rafael and Schaden, Markus},
    publisher={HSR Hochschule für Technik Rapperswil},
    note={\url{https://eprints.hsr.ch/603/}},
    year={2017}
}


%various bookz
@book{keller,
    title={Software Engineering Lecture, HSR},
    author={Daniel Keller},
	publisher={HSR Hochschule für Technik Rapperswil},
    year={2018}
}

@book{gof,
    title={Design Patterns. Elements of Reusable Object-Oriented Software},
    author={Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides},
    publisher={Addison-Wesley},
    year={1995},
	isbn={0-201-63361-2}
}

% Dafny
@book{dafnyReferenceManual,
    title={Dafny Reference Manual},
    author={Richard L. Ford, K. Rustan M. Leino},
    note={Available at \url{https://homepage.cs.uiowa.edu/~tinelli/classes/181/Papers/dafny-reference.pdf}},
    year={2017}
}
@online{dafny_noWarnings,
	title = "Dafny, Warnings Issue",
	url  = "https://github.com/dafny-lang/dafny/issues/168",
	addendum = "(Accessed: 26.05.2020)"
}
@online{dafnyWiki,
	title = "Dafny, Wikipedia",
	url  = "https://en.wikipedia.org/wiki/Dafny",
	addendum = "(Accessed: 14.05.2020)"
}
@online{coco,
	title = "Coco/R",
	url  = "http://www.ssw.uni-linz.ac.at/Research/Projects/Coco/",
	addendum = "(Accessed: 28.05.2020)"
}

@online{haskell,
	title = "Haskell",
	url  = "https://www.haskell.org/",
	addendum = "(Accessed: 28.05.2020)"
}




@online{omnisharpClient,
	title = "OmniSharp Language Client",
	url  = "https://www.nuget.org/packages/OmniSharp.Extensions.LanguageClient/",
	addendum = "(Accessed: 15.04.2020)"
}
@online{nunitCollectionAssert,
	title = "Nunit CollectionAssert",
	url  = "https://github.com/nunit/docs/wiki/Collection-Assert",
	addendum = "(Accessed: 15.04.2020)"
}
@online{functionVSMethod,
	title = "Functions vs. Methods",
	url  = "https://www.engr.mun.ca/~theo/Courses/AlgCoCo/6892-downloads/dafny-notes-010.pdf",
	addendum = "(Accessed: 15.04.2020)"
}
% LSP
@online{lspextensionguide,
	title = "Language Server Extension Guide",
	url  = "https://code.visualstudio.com/api/language-extensions/language-server-extension-guide",
	addendum = "(Accessed: 15.12.2019)"
}

@online{lspspec,
	title = "Language Server Protocol Specification",
	url  = "https://microsoft.github.io/language-server-protocol/specification",
	addendum = "(Accessed: 26.05.2020)"
}

@online{lspWiki,
	title = "Language Server Protocol Wikipedia",
	url  = "https://en.wikipedia.org/w/index.php?title=Language_Server_Protocol",
	addendum = "(Accessed: 26.05.2020)"
}

@online{langserverdotorg,
	title = "Langserver.org",
	url  = "https://langserver.org/",
	addendum = "(Accessed: 05.12.2019)"
}

@online{vscodeAPI,
	title = "VSCode Extension API",
	url  = "https://code.visualstudio.com/api",
	addendum = "(Accessed: 22.05.2020)"
}

@online{jsondotnet,
	title = "Newtonsoft Json.NET",
	url  = https://www.newtonsoft.com/json,
	addendum = "(Accessed: 22.05.2020)"
}

@online{clparser,
	title = "Commandlineparser",
	url  = https://github.com/commandlineparser/commandline,
	addendum = "(Accessed: 22.05.2020)"
}
@online {serilog,
	title = "Serilog",
	url  = https://serilog.net/,
	addendum = "(Accessed: 22.05.2020)"
}

% OmniSharp
@online{omnisharptutorial,
	title = "Martin Björkström - Creating a language server using .NET",
	url  = "http://martinbjorkstrom.com/posts/2018-11-29-creating-a-language-server",
	addendum = "(Accessed: 14.10.2019)"
}

@online{omnisharpgit,
	title = "OmniSharp/csharp-language-server-protocol",
	url  = "https://github.com/OmniSharp/csharp-language-server-protoco",
	addendum = "(Accessed: 05.12.2019)"
}

@online{omnisharpslack,
	title = "Martin Björkström - Creating a language server using .NET.",
	url  = "https://app.slack.com/client/T0RE90CRF/C804W8JHE",
	addendum = "(Accessed: 05.12.2019)"
}


% CI, SonarQube
@online{sonar-supports-only-one-language,
	title = "SonarCloud for C\# Framework Project",
	url  = "https://community.sonarsource.com/t/sonarcloud-for-c-framework-project/17132",
	addendum = "(Accessed: 23.03.2020)"
}
@online{opencover,
	title = "OpenCover",
	url  = "https://github.com/OpenCover/opencover",
	addendum = "(Accessed: 23.03.2020)"
}
@online{monocov,
	title = "monocov",
	url  = "https://github.com/mono/monocov",
	addendum = "(Accessed: 23.03.2020)"
}

# Plugins
@online{sonar-lint,
	title = "SonarLint for Visual Studio Code",
	url  = "https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarlint-vscode",
	addendum = "(Accessed: 27.05.2020)"
}

# TypeScript
@online{ts-types,
	title = "Data Types in TypeScript",
	url  = "https://www.geeksforgeeks.org/data-types-in-typescript/",
	addendum = "(Accessed: 15.04.2020)"
}
@online{ts-interface,
	title = "TypeScript: Class vs Interface",
	url  = "https://medium.com/front-end-weekly/typescript-class-vs-interface-99c0ae1c2136",
	addendum = "(Accessed: 15.04.2020)"
}

% Mono support
@online{mono-slack,
	title = "OmniSharp Slack - Mono",
	url  = "https://omnisharp.slack.com/archives/C804W8JHE/p1587578976071500",
	addendum = "(Accessed: 24.04.2020)"
}
@online{mono-git,
	title = "OmniSharp GitHub Issue - Mono",
	url  = "https://github.com/OmniSharp/csharp-language-server-protocol/issues/179",
	addendum = "(Accessed: 24.04.2020)"
}

@online{correctnessLab,
	title = "HSR Correctness Lab",
	url  = " https://www.correctness-lab.ch/",
	addendum = "(Accessed: 14.12.2019)"
}
